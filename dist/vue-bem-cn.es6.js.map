{"version":3,"file":"vue-bem-cn.es6.js","sources":["../src/utils.js","../src/bem-cn/bem-names.js","../src/bem-cn/index.js","../src/globals.js","../src/vue-plugin.js"],"sourcesContent":["export const isString = val => val && typeof val === 'string';\nexport const isPObject = val =>\n  !!(val && typeof val === 'object' && val.constructor === Object && Object.keys(val).length);\n\nexport const hyphenate = str => str.replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n\n// eslint-disable-next-line no-restricted-globals\nexport const isNumber = val => typeof val === 'number' && isFinite(val);\n","import { isPObject, isString, isNumber } from '../utils';\n\n/**\n * Create String from BEM entitys\n * @param {Object} entitys BEM entitys\n * @param {String} entitys.block Block\n * @param {String} [entitys.el] Element\n * @param {Object<string>} [entitys.mods] Modifiers\n * @param {String} [entitys.mixin] Mixin\n * @param {Object<string>} delimiters Delimiters for BEM entitys\n * @returns {String}\n */\nexport default function bemNames(entitys, delimiters) {\n  const names = entitys || {};\n  let resultString = (delimiters.ns || '') + names.block;\n\n  if (names.el) resultString += delimiters.el + names.el;\n\n  if (isPObject(names.mods)) {\n    resultString += Object.keys(names.mods).reduce((prev, name) => {\n      const val = names.mods[name];\n      /* eslint-disable no-param-reassign */\n      if (val === true) {\n        prev += ' ' + resultString + delimiters.mod + name;\n      } else if (isString(val) || isNumber(val)) {\n        prev += ' ' + resultString + delimiters.mod + name + delimiters.modVal + val;\n      }\n      /* eslint-enable no-param-reassign */\n\n      return prev;\n    }, '');\n  }\n  return resultString + (isString(names.mixin) ? ' ' + names.mixin : '');\n}\n","import { isString, isPObject, hyphenate } from '../utils';\nimport bemNames from './bem-names';\n\nexport default function bemCn(block, options) {\n  return function entitys(elem, mods, mix) {\n    const resultObj = {\n      block,\n      el: '',\n      mods: {},\n      mixin: '',\n    };\n\n    if (isPObject(mods)) {\n      resultObj.mods = mods;\n    } else if (isString(mods)) {\n      resultObj.mixin += mods;\n    }\n\n    if (isString(elem)) {\n      resultObj.el = elem;\n    } else if (isPObject(elem)) {\n      resultObj.mods = elem;\n    }\n\n    if (isString(mix)) {\n      resultObj.mixin += resultObj.mixin.length ? ` ${mix}` : mix;\n    }\n\n    const bemClasses = bemNames(resultObj, options.delimiters);\n\n    return options.hyphenate\n      ? hyphenate(bemClasses)\n      : bemClasses;\n  };\n}\n","export const DEFAULT_DELIMITERS = {\n  ns: '',\n  el: '__',\n  mod: '--',\n  modVal: '-',\n};\n\nexport const DEFAULT_CONFIG = {\n  hyphenate: false,\n  methodName: 'b',\n};\n","import bemCn from './bem-cn/index';\nimport { DEFAULT_DELIMITERS, DEFAULT_CONFIG } from './globals';\nimport { isString } from './utils';\n\nexport default {\n  install(Vue, config = { delimiters: {} }) {\n    const cfg = {\n      ...DEFAULT_CONFIG,\n      ...config,\n      delimiters: {\n        ...DEFAULT_DELIMITERS,\n        ...config.delimiters,\n      },\n    };\n\n    Vue.mixin({\n      created() {\n        const block = this.$options.block || this.$options.name;\n        let generator = null;\n\n        if (!isString(block)) return;\n\n        generator = bemCn(block, cfg);\n        this[cfg.methodName] = (...args) => generator(...args);\n      },\n    });\n  },\n};\n"],"names":["isString","val","isPObject","constructor","Object","keys","length","hyphenate","str","replace","toLowerCase","isNumber","isFinite","bemNames","entitys","delimiters","names","resultString","ns","block","el","mods","reduce","prev","name","mod","modVal","mixin","bemCn","options","elem","mix","resultObj","bemClasses","DEFAULT_DELIMITERS","DEFAULT_CONFIG","Vue","config","cfg","$options","generator","methodName"],"mappings":"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"}